////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	GameEngine\TerminableManager.cpp
//
// summary:	Implements the terminable manager class
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "TerminableManager.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Process all Termination event. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void TerminableManager::ProcessTerminationEvent()
{
	//call each items terminate and then remove it from list
	std::list<Terminable*>::iterator iter = DeathList.begin();
	while (iter != DeathList.end() )
	{
		(*iter)->Terminate();
		delete *iter;
		iter = DeathList.erase(iter);	
	}


}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

TerminableManager::~TerminableManager()
{
	//printf("I really hope I find this");
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Registers the GameObject to TerminableManager through Deathlist. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
///
/// <param name="t">	[in,out] Place the GameObject you wish to Register into the DeathList (Game Objects inherit Terminable).  </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void TerminableManager::Register(Terminable* t)
{
	//push item into list
	DeathList.push_front(t);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Cleanups this object. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void TerminableManager::Cleanup()
{
	DeathList.clear();
}