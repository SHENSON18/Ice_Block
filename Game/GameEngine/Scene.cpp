////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	GameEngine\Scene.cpp
//
// summary:	Implements the scene class
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Scene.h"
#include "Visualizer.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Default constructor. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

Scene::Scene()
{

}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

Scene::~Scene()
{
	Scene::GetInputableManager()->Cleanup();
	Scene::GetUpdateManager()->Cleanup();
	Scene::GetDrawManager()->Cleanup();
	Scene::GetTerminableManager()->Cleanup();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Updates the scene. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void Scene::UpdateScene()   //updates all the objects in the scene
{
	Scene::GetUpdateManager()->UpdateAll();  //Calls the updateManager for the scene
	Scene::GetInputableManager()->UpdateAll(); //Calls all the InputManager for the scene
	Scene::GetTerminableManager()->ProcessTerminationEvent();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Draw scene. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void Scene::DrawScene()
{
	GetDrawManager()->DrawAll();
	Visualizer::Render();
}