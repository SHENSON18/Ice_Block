////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	GameEngine\Alarmable.cpp
//
// summary:	Implements the alarmable class
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Alarmable.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Default constructor. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

Alarmable::Alarmable(void)
{
	 
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

Alarmable::~Alarmable()
{

}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Alarm 0. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void Alarmable::Alarm0()
{
	printf("I am alarm0\n");  

}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Alarm 1. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void Alarmable::Alarm1()
{
	printf("I am a alarm1\n");
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Alarm 2. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void Alarmable::Alarm2()
{
	printf("I am a alarm2\n");
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Dispatches which calls the Given Alarm.. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
///
/// <param name="n">	The AlarmID to process. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void Alarmable::Dispatch(AlarmID n)
{
	switch( n)
	{
		case AlarmID_0:
			Alarm0();
			break;
		case AlarmID_1:
			Alarm1();
			break;
		case AlarmID_2:
			Alarm2();
			break;
	}

}