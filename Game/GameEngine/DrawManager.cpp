////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	GameEngine\DrawManager.cpp
//
// summary:	Implements the draw manager class
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "DrawManager.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	De register. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
///
/// <param name="pointer">	[in,out] Place the GameObject you wish to DeRegistry from DrawRegistery. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void DrawManager::DeRegister(Draw* pointer)
{
	DrawRegistery.remove(pointer);
	//printf("DrawRegistry has removed a Draw\n"); 
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Registers this object. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
///
/// <param name="pointer">	[in,out] Place the GameObject you wish to Register to DrawManager (Game Objects inherit Draw). </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void DrawManager::Register(Draw* pointer)
{
	DrawRegistery.push_back(pointer);
	//printf("DrawRegistry has registered a Draw\n"); 
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Calls all GameObjects DrawObject() who are Registered to the DrawManager. Note: Be sure you call the objects->Render in its DrawObject </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void DrawManager::DrawAll()
{
	for(iter = this->DrawRegistery.begin();iter!=DrawRegistery.end(); iter++)
	{
		//printf("Draw Manager is Updating\n");
		(*iter)->DrawObject();
	}
	//printf("Draw Manager is done update.....\n");

}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

DrawManager::~DrawManager()
{
	//printf("I want to die");
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Cleans up this object. </summary>
///
/// <remarks>	Theonlyhunter, 3/13/2015. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

void DrawManager::Cleanup()
{
	DrawRegistery.clear();
}